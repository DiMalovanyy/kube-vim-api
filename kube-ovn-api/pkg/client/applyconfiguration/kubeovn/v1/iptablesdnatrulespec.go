// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// IptablesDnatRuleSpecApplyConfiguration represents a declarative configuration of the IptablesDnatRuleSpec type for use
// with apply.
type IptablesDnatRuleSpecApplyConfiguration struct {
	EIP          *string `json:"eip,omitempty"`
	ExternalPort *string `json:"externalPort,omitempty"`
	Protocol     *string `json:"protocol,omitempty"`
	InternalIP   *string `json:"internalIp,omitempty"`
	InternalPort *string `json:"internalPort,omitempty"`
}

// IptablesDnatRuleSpecApplyConfiguration constructs a declarative configuration of the IptablesDnatRuleSpec type for use with
// apply.
func IptablesDnatRuleSpec() *IptablesDnatRuleSpecApplyConfiguration {
	return &IptablesDnatRuleSpecApplyConfiguration{}
}

// WithEIP sets the EIP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EIP field is set to the value of the last call.
func (b *IptablesDnatRuleSpecApplyConfiguration) WithEIP(value string) *IptablesDnatRuleSpecApplyConfiguration {
	b.EIP = &value
	return b
}

// WithExternalPort sets the ExternalPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExternalPort field is set to the value of the last call.
func (b *IptablesDnatRuleSpecApplyConfiguration) WithExternalPort(value string) *IptablesDnatRuleSpecApplyConfiguration {
	b.ExternalPort = &value
	return b
}

// WithProtocol sets the Protocol field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Protocol field is set to the value of the last call.
func (b *IptablesDnatRuleSpecApplyConfiguration) WithProtocol(value string) *IptablesDnatRuleSpecApplyConfiguration {
	b.Protocol = &value
	return b
}

// WithInternalIP sets the InternalIP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InternalIP field is set to the value of the last call.
func (b *IptablesDnatRuleSpecApplyConfiguration) WithInternalIP(value string) *IptablesDnatRuleSpecApplyConfiguration {
	b.InternalIP = &value
	return b
}

// WithInternalPort sets the InternalPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InternalPort field is set to the value of the last call.
func (b *IptablesDnatRuleSpecApplyConfiguration) WithInternalPort(value string) *IptablesDnatRuleSpecApplyConfiguration {
	b.InternalPort = &value
	return b
}
