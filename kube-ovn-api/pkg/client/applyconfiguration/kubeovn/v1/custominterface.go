// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// CustomInterfaceApplyConfiguration represents a declarative configuration of the CustomInterface type for use
// with apply.
type CustomInterfaceApplyConfiguration struct {
	Interface *string  `json:"interface,omitempty"`
	Nodes     []string `json:"nodes,omitempty"`
}

// CustomInterfaceApplyConfiguration constructs a declarative configuration of the CustomInterface type for use with
// apply.
func CustomInterface() *CustomInterfaceApplyConfiguration {
	return &CustomInterfaceApplyConfiguration{}
}

// WithInterface sets the Interface field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Interface field is set to the value of the last call.
func (b *CustomInterfaceApplyConfiguration) WithInterface(value string) *CustomInterfaceApplyConfiguration {
	b.Interface = &value
	return b
}

// WithNodes adds the given value to the Nodes field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Nodes field.
func (b *CustomInterfaceApplyConfiguration) WithNodes(values ...string) *CustomInterfaceApplyConfiguration {
	for i := range values {
		b.Nodes = append(b.Nodes, values[i])
	}
	return b
}
