// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// OvnEipSpecApplyConfiguration represents a declarative configuration of the OvnEipSpec type for use
// with apply.
type OvnEipSpecApplyConfiguration struct {
	ExternalSubnet *string `json:"externalSubnet,omitempty"`
	V4Ip           *string `json:"v4Ip,omitempty"`
	V6Ip           *string `json:"v6Ip,omitempty"`
	MacAddress     *string `json:"macAddress,omitempty"`
	Type           *string `json:"type,omitempty"`
}

// OvnEipSpecApplyConfiguration constructs a declarative configuration of the OvnEipSpec type for use with
// apply.
func OvnEipSpec() *OvnEipSpecApplyConfiguration {
	return &OvnEipSpecApplyConfiguration{}
}

// WithExternalSubnet sets the ExternalSubnet field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExternalSubnet field is set to the value of the last call.
func (b *OvnEipSpecApplyConfiguration) WithExternalSubnet(value string) *OvnEipSpecApplyConfiguration {
	b.ExternalSubnet = &value
	return b
}

// WithV4Ip sets the V4Ip field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the V4Ip field is set to the value of the last call.
func (b *OvnEipSpecApplyConfiguration) WithV4Ip(value string) *OvnEipSpecApplyConfiguration {
	b.V4Ip = &value
	return b
}

// WithV6Ip sets the V6Ip field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the V6Ip field is set to the value of the last call.
func (b *OvnEipSpecApplyConfiguration) WithV6Ip(value string) *OvnEipSpecApplyConfiguration {
	b.V6Ip = &value
	return b
}

// WithMacAddress sets the MacAddress field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MacAddress field is set to the value of the last call.
func (b *OvnEipSpecApplyConfiguration) WithMacAddress(value string) *OvnEipSpecApplyConfiguration {
	b.MacAddress = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *OvnEipSpecApplyConfiguration) WithType(value string) *OvnEipSpecApplyConfiguration {
	b.Type = &value
	return b
}
